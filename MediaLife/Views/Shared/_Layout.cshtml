@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostEnvironment
@{
    string titlePrefix = "";
    if (ViewData.ContainsKey("Title") && !String.IsNullOrEmpty(ViewData["Title"]?.ToString()))
    {
        titlePrefix += ViewData["Title"]?.ToString() + " - ";
    }
    if (ViewData.ContainsKey("Section") && !String.IsNullOrEmpty(ViewData["Section"]?.ToString()))
    {
        titlePrefix += ViewData["Section"]?.ToString() + " - ";
    }

    string controller = Context.Request.RouteValues["controller"]?.ToString() ?? "";
    string view = System.IO.Path.GetFileNameWithoutExtension(ViewContext.View.Path);

    string localCssPath = $"{HostEnvironment.WebRootPath}/dist/css/{controller}/{view}.css";
    bool localCssExists = System.IO.File.Exists(localCssPath);
    string embededCss = localCssExists ? $"<style>{System.IO.File.ReadAllText(localCssPath)}</style>" : "";

    string localJsPath = $"{HostEnvironment.WebRootPath}/dist/js/{controller}/{view}.js";
    bool localJsExists = System.IO.File.Exists(localJsPath);
    string localJsContent = localJsExists ? System.IO.File.ReadAllText(localJsPath) : "";
    int sourceMappingIndex = localJsContent.IndexOf("\n//# sourceMappingURL");
    if (sourceMappingIndex >= 0)
    {
        localJsContent = localJsContent.Remove(sourceMappingIndex);
    }
    string localSourceMapPath = $"{HostEnvironment.WebRootPath}/dist/js/{controller}/{view}.js.map";
    bool localSourceMapExists = System.IO.File.Exists(localSourceMapPath);
    if (localSourceMapExists)
    {
        localJsContent += $"\n//# sourceMappingURL=/dist/js/{controller}/{view}.js.offset.map";
    }

    string embededJs = localJsExists ? $"<script>{localJsContent}</script>" : "";


    string jsData = "null";
    if (ViewData["jsData"] != null)
    {
        var settings = new Newtonsoft.Json.JsonSerializerSettings();
        settings.ContractResolver = new Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver();
        jsData = Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["jsData"], settings);
    }
    
    string siteSection = ViewData["Section"]?.ToString() ?? "Media Life";
    string sectionUrl = ViewData["Section"]?.ToString() != null ? siteSection.ToLower() : "";
    Icon icon = new("🎭");
    if (sectionUrl == "tv") { icon = new("📺"); }
    if (sectionUrl == "youtube") { icon = new BrandIcon("youtube-square"); }
    if (sectionUrl == "movies") { icon = new("🎥"); }
    if (sectionUrl == "books") { icon = new("📚"); }
}
<html>
<head>

    <title>
        @titlePrefix
        MediaLife
    </title>

    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <link rel="apple-touch-icon" href="/_images/admin/icons/.png">

    <link rel="stylesheet" href="~/dist/css/Site.css" asp-append-version="true" />
    <script src="~/dist/js/Site.js" asp-append-version="true"></script>

    @Html.Raw(embededJs)
    @Html.Raw(embededCss)
    
    <script>
        function init() {
            if (window.site.init) { window.site.init(); }
            if (window.page && window.page.init) { window.page.init(); }
            if (window.site.windowResize) { window.addEventListener('resize', () => site.windowResize()); }
            if (window.page && window.page.windowResize) { window.addEventListener('resize', () => page.windowResize()); }
            window.dispatchEvent(new Event('resize'));
        }
        window.site = new MediaLife.MediaLife();
        @Html.Raw(localJsExists ? $"window.page = new {controller}{view}.{controller}{view}(site, {jsData});" : "")
    </script>

</head>

<body onload="init();">

    @if (ViewData["NoHeader"] == null)
    {
        <div id="header">
            <div class="header-left">
                <div id="burger_menu" onclick="site.toggleSiteMenu()">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
                @Html.Icon(icon, siteSection, $"/{sectionUrl}")
            </div>
            <div class="header-right">
                <form action="/@sectionUrl/search">
                    <input type="search" name="q" value="@ViewBag.q" placeholder="search" />
                </form>
                <a href="JavaScript:;" class="search-link" onclick="site.openSearch()">🔍</a>
                <div id="user_menu_button" onclick="site.toggleUserMenu()">
                    @Html.Icon(new Icon("user-circle"), classes: "icon icon-user")
                    @Html.Icon(new Icon("xmark"), classes: "icon icon-close")
                </div>
            </div>
        </div>
        <div id="search_row" class="hide">
            <form action="/@sectionUrl/search">
                <input type="search" name="q" id="search_input" onblur="site.searchBlur()" value="@ViewBag.q" placeholder="search" />
            </form>
        </div>

        <div id="site_menu" onclick="site.toggleSiteMenu();">
            <div class="section-buttons">
                @Html.ButtonRow(new() {
                    Html.Button("TV", new("📺"), null, new ButtonOptions() { Url = "/tv", StackedIcon = true }),
                    Html.Button("YouTube", new BrandIcon("youtube"), null, new ButtonOptions() { Url = "/youtube", StackedIcon = true, Classes = "youtube" }),
                }, new() { Justify = RowJustify.SpaceEvenly })
                @Html.ButtonRow(new() {
                    Html.Button("Movies", new("🎥"), null, new ButtonOptions() { Url = "/movies", StackedIcon = true }),
                    Html.Button("Books", new("📚"), null, new ButtonOptions() { Url = "/books", StackedIcon = true }),
                }, new() { Justify = RowJustify.SpaceEvenly })
            </div>
            @Html.Icon(new Icon("📝") { FixedWidth = true }, "Create Custom List", "site.createCustomList();", "menu-item")
            @Html.Icon(new Icon("⚙️") { FixedWidth = true }, "Settings", "/Config", "menu-item")
            @Html.Icon(new Icon("🪵") { FixedWidth = true }, "Log", "/Log", "menu-item")
        </div>
        
        <div id="user_menu">
            <div class="row username">@User.Identity?.Name</div>
            @Html.Icon(new Icon("xmarks-lines") { FixedWidth = true }, "Pass Key", classes: "row")
            @Html.Icon(new Icon("copy") { FixedWidth = true }, "Copy Pass Key", "site.copyPasskey()", "row indent")
            @Html.Icon(new Icon("link") { FixedWidth = true }, "Copy Login Link", "site.copyLoginLink()", "row indent")
            @Html.Icon(new Icon("retweet") { FixedWidth = true }, "Reset Pass Key", "site.resetPasskey()", "row indent")
            <hr />
            @Html.Icon(new Icon("right-from-bracket") { FixedWidth = true }, "Logout", "/Logout", "row")
        </div>
    }

    <div id="site_progress_bar" class="hide mat-mdc-progress-bar mdc-linear-progress mat-primary mdc-linear-progress--animation-ready mdc-linear-progress--indeterminate">
        <div class="mdc-linear-progress__bar mdc-linear-progress__primary-bar" style="transform: scaleX(1);"><span class="mdc-linear-progress__bar-inner"></span></div>
        <div class="mdc-linear-progress__bar mdc-linear-progress__secondary-bar"><span class="mdc-linear-progress__bar-inner"></span></div>
    </div>

    <div id="content" class="@(controller)@(view)">

        <div id="snack_bar" class="snack-bar hide">
            <span id="snack_bar_message"></span>
        </div>
        
        @RenderBody()

    </div>

    <div id="footer">

    </div>

    <div id="vlc_player" class="hide info-only">
        <div class="move-button move-to-menu-button" onclick="vlc.moveToMenu()">
            @Html.Icon(new SolidIcon("caret-left"))
        </div>
        <a id="vlc_poster"></a>
        <div class="vlc-content">
            <div class="vlc-title">
                <div class="vlc-title-text">
                    <img src="/images/vlc.svg" />
                    <div id="vlc_playing_title"></div>
                </div>
                <div class="vlc-buttons">
                    @Html.Icon(new SolidIcon("up-right-and-down-left-from-center"), action: "vlc.fullscreen()", classes: "fullscreen")
                    @Html.Icon(new SolidIcon("down-left-and-up-right-to-center"), action: "vlc.fullscreen()", classes: "fullscreen-exit")
                </div>
            </div>
            <div class="vlc-detail-row">
                <div class="vlc-scrubber">
                    <div id="vlc-scrubber-time" class="time" style="text-align:right;"></div>
                    <div class="vlc-scrubber-bar" onclick="vlc.scrubberClick()">
                        <div id="vlc-scrubber-mark"></div>
                    </div>
                    <div id="vlc-scrubber-time-remaining" class="time"></div>
                </div>
                <div class="vlc-buttons">
                    <div class="vlc-side-controls"></div>
                    <div class="vlc-central-controls">
                        @Html.Icon(new SolidIcon("backward-step"), action: "vlc.previous()")
                        @Html.Icon(new SolidIcon("rotate-left"), action: "vlc.skipBack()")
                        @Html.Icon(new SolidIcon("play"), action: "vlc.play()", classes: "play")
                        @Html.Icon(new SolidIcon("pause"), action: "vlc.pause()", classes: "pause")
                        @Html.Icon(new SolidIcon("rotate-right"), action: "vlc.skip()")
                        @Html.Icon(new SolidIcon("forward-step"), action: "vlc.next()", htmlAttributes: new() { { "id", "vlc_next_episode_button" } })
                    </div>
                    <div class="vlc-side-controls">
                        @Html.Icon(new SolidIcon("up-right-and-down-left-from-center"), action: "vlc.fullscreen()", classes: "fullscreen")
                        @Html.Icon(new SolidIcon("down-left-and-up-right-to-center"), action: "vlc.fullscreen()", classes: "fullscreen-exit")
                    </div>
                </div>
            </div>
        </div>
        <div class="move-button move-out-of-menu-button" onclick="vlc.moveOutOfMenu()">
            @Html.Icon(new SolidIcon("caret-right"))
        </div>
    </div>

</body>
</html>